<?php

namespace AcademicPuma\RestClient\Queries\Get;

use AcademicPuma\RestClient\Model;
use PHPUnit\Framework\TestCase;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-04-06 at 11:46:32.
 */
class GetConceptDetailsQueryTest extends TestCase
{

    /**
     * @var GetConceptDetailsQuery
     */
    protected $getConceptDetailsQuery;

    /**
     * @dataProvider executeProvider
     * @param Accessor $accessor
     * @param string $userName
     * @param string $conceptName
     *
     * @throws \AcademicPuma\RestClient\Model\Exceptions\UnsupportedOperationException
     */
    public function testExecute($accessor, $conceptName, $userName)
    {

        $this->getConceptDetailsQuery = new GetConceptDetailsQuery($conceptName, $userName);

        // Check status code.
        $statusCode = $this->getConceptDetailsQuery->execute($accessor->getClient())->getStatusCode();
        $this->assertEquals('200', $statusCode);

        // Check type.
        $tag = $this->getConceptDetailsQuery->model();
        $this->assertTrue($tag instanceof Model\Tag);

        $subTags = $tag->getSubTags();
        $this->assertTrue(!empty($subTags));
        foreach ($subTags as $subTag) {
            $this->assertTrue($subTag instanceof Model\Tag);
        }

        // Is executed flag set?
        $this->assertTrue($this->getConceptDetailsQuery->isExecuted());
    }

    public function executeProvider()
    {

        global $ACCESSOR_OAUTH, $ACCESSOR_BASICAUTH;

        return array(
            array($ACCESSOR_BASICAUTH, 'folksonomy', TEST_USER_ID)
        );
    }
}
