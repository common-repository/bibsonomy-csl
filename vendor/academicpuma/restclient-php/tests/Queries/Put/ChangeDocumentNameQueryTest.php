<?php

namespace AcademicPuma\RestClient\Queries\Put;

use AcademicPuma\RestClient\Authentication\Accessor;
use AcademicPuma\RestClient\Model;
use AcademicPuma\RestClient\Queries;
use PHPUnit\Framework\TestCase;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-04-06 at 11:45:01.
 */
class ChangeDocumentNameQueryTest extends TestCase
{

    /**
     * @var ChangeDocumentNameQuery
     */
    private $changeDocumentNameQuery;

    /**
     * @var Model\Document
     */
    private $document;

    /**
     *
     * @var string
     */
    private $newFileName = 'newFileName.pdf';

    /**
     *
     * @var string
     */
    private $realName = 'Vergleich_Sortierverfahren.pdf';

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp(): void
    {

        // Create document.
        $this->document = new Model\Document();
        $this->document->setFilename($this->newFileName);
        $this->document->setUserName(TEST_USER_ID);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown(): void
    {

    }

    /**
     * @dataProvider executeProvider
     */
    public function testExecute(Accessor $accessor, $userName, $resourceHash, $oldFileName)
    {

        $this->changeDocumentNameQuery = new ChangeDocumentNameQuery($userName, $resourceHash, $oldFileName,
            $this->document);
        $newFileName = $this->document->getFilename();
        // Execute and check status code.
        $statusCode1 = $this->changeDocumentNameQuery->execute($accessor->getClient())->getStatusCode();
        $this->assertEquals('200', $statusCode1);

        // Get post with document with new name.
        $getPostQuery = new Queries\Get\GetPostDetailsQuery($userName, $resourceHash);
        /** @var \AcademicPuma\RestClient\Model\Post $post */
        $post = $getPostQuery->execute($accessor->getClient())->model();

        /** @var Model\Document $document */
        $document = $post->getDocuments()->get(0);
        $this->assertEquals($document->getFilename(), $newFileName);

        // Set former name.
        $document->setFilename($oldFileName);
        $this->changeDocumentNameQuery = new ChangeDocumentNameQuery($userName, $resourceHash, $newFileName, $document);
        $this->changeDocumentNameQuery->execute($accessor->getClient());
    }

    public function executeProvider()
    {

        global $ACCESSOR_OAUTH, $ACCESSOR_BASICAUTH;

        return array(
            array($ACCESSOR_BASICAUTH, TEST_USER_ID, TEST_RESOURCE_HASH, $this->realName)
        );
    }
}
